#!/usr/bin/sh

set -eux

SOCAT="$1"
SERVER="$2"

# Meet DBus bus and path name constraints, append own PID for parallel runs
TEST_NAME="$(basename "$0" | tr '-' '_')"_${$}
TEST_DIR="$(mktemp --tmpdir --directory "${TEST_NAME}.XXXXXX")"

PTYS_PID=""
SUN_PID=""
SERVER_PID=""

cd "$TEST_DIR"

cleanup()
{
  [ -z "$SUN_PID" ] || kill "$SUN_PID"
  [ -z "$SERVER_PID" ] || kill "$SERVER_PID"
  [ -z "$PTYS_PID" ] || kill "$PTYS_PID"
  wait
  cd -
  rm -rf "$TEST_DIR"
}

trap cleanup EXIT

TEST_CONF="${TEST_NAME}.conf"
TEST_LOG="${TEST_NAME}.log"

cat <<EOF > "$TEST_CONF"
active-console = $TEST_NAME
[$TEST_NAME]
console-id = $TEST_NAME
logfile = $TEST_LOG
EOF

"$SOCAT" PTY,raw,echo=0,link=remote PTY,raw,echo=0,wait-slave,link=local &
PTYS_PID="$!"
while ! [ -e remote ] || ! [ -e local ]; do sleep 1; done

"$SERVER" --config "$TEST_CONF" "$(realpath local)" &
SERVER_PID="$!"
while ! busctl status --user xyz.openbmc_project.Console."${TEST_NAME}"; do sleep 1; done

"$SOCAT" -u "ABSTRACT:obmc-console.${TEST_NAME}" EXEC:'grep -m1 -qF socket-read' &
SUN_PID="$!"

sleep 1

echo "socket-read" > remote

sleep 1

kill -0 "$SUN_PID" && exit 1
SUN_PID=""
